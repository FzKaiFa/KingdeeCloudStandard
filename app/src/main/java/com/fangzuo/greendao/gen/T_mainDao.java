package com.fangzuo.greendao.gen;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.fangzuo.assist.cloud.Dao.T_main;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "T_MAIN".
*/
public class T_mainDao extends AbstractDao<T_main, String> {

    public static final String TABLENAME = "T_MAIN";

    /**
     * Properties of entity T_main.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property FIndex = new Property(0, String.class, "FIndex", true, "FINDEX");
        public final static Property FOrderId = new Property(1, long.class, "FOrderId", false, "FORDER_ID");
        public final static Property FBarcode = new Property(2, String.class, "FBarcode", false, "FBARCODE");
        public final static Property IMIE = new Property(3, String.class, "IMIE", false, "IMIE");
        public final static Property FBillNo = new Property(4, String.class, "FBillNo", false, "FBILL_NO");
        public final static Property FBillerID = new Property(5, String.class, "FBillerID", false, "FBILLER_ID");
        public final static Property Activity = new Property(6, int.class, "activity", false, "ACTIVITY");
        public final static Property FSoorDerno = new Property(7, String.class, "FSoorDerno", false, "FSOOR_DERNO");
        public final static Property FPriceTimePoint = new Property(8, String.class, "FPriceTimePoint", false, "FPRICE_TIME_POINT");
        public final static Property FStockOrgId = new Property(9, String.class, "FStockOrgId", false, "FSTOCK_ORG_ID");
        public final static Property FPurchaseOrgId = new Property(10, String.class, "FPurchaseOrgId", false, "FPURCHASE_ORG_ID");
        public final static Property FBillTypeID = new Property(11, String.class, "FBillTypeID", false, "FBILL_TYPE_ID");
        public final static Property FOwnerTypeIdHead = new Property(12, String.class, "FOwnerTypeIdHead", false, "FOWNER_TYPE_ID_HEAD");
        public final static Property FOwnerIdHead = new Property(13, String.class, "FOwnerIdHead", false, "FOWNER_ID_HEAD");
        public final static Property FOwnerTypeIdHeadIn = new Property(14, String.class, "FOwnerTypeIdHeadIn", false, "FOWNER_TYPE_ID_HEAD_IN");
        public final static Property FOwnerIdHeadIn = new Property(15, String.class, "FOwnerIdHeadIn", false, "FOWNER_ID_HEAD_IN");
        public final static Property FDBType = new Property(16, String.class, "FDBType", false, "FDBTYPE");
        public final static Property FDBDirection = new Property(17, String.class, "FDBDirection", false, "FDBDIRECTION");
        public final static Property FID = new Property(18, String.class, "FID", false, "FID");
        public final static Property FEntryID = new Property(19, String.class, "FEntryID", false, "FENTRY_ID");
        public final static Property FSettleOrgId = new Property(20, String.class, "FSettleOrgId", false, "FSETTLE_ORG_ID");
        public final static Property FSettleCurrId = new Property(21, String.class, "FSettleCurrId", false, "FSETTLE_CURR_ID");
        public final static Property FDate = new Property(22, String.class, "FDate", false, "FDATE");
        public final static Property FSupplierId = new Property(23, String.class, "FSupplierId", false, "FSUPPLIER_ID");
        public final static Property FDepartmentNumber = new Property(24, String.class, "FDepartmentNumber", false, "FDEPARTMENT_NUMBER");
        public final static Property FDepartment = new Property(25, String.class, "FDepartment", false, "FDEPARTMENT");
        public final static Property FPurchaseDeptId = new Property(26, String.class, "FPurchaseDeptId", false, "FPURCHASE_DEPT_ID");
        public final static Property FPurchaseDept = new Property(27, String.class, "FPurchaseDept", false, "FPURCHASE_DEPT");
        public final static Property FPurchaserId = new Property(28, String.class, "FPurchaserId", false, "FPURCHASER_ID");
        public final static Property FPurchaser = new Property(29, String.class, "FPurchaser", false, "FPURCHASER");
        public final static Property FStockerNumber = new Property(30, String.class, "FStockerNumber", false, "FSTOCKER_NUMBER");
        public final static Property FStocker = new Property(31, String.class, "FStocker", false, "FSTOCKER");
        public final static Property FCustomerID = new Property(32, String.class, "FCustomerID", false, "FCUSTOMER_ID");
        public final static Property FCustomer = new Property(33, String.class, "FCustomer", false, "FCUSTOMER");
        public final static Property FNot = new Property(34, String.class, "FNot", false, "FNOT");
        public final static Property F_FFF_Text = new Property(35, String.class, "F_FFF_Text", false, "F__FFF__TEXT");
    }


    public T_mainDao(DaoConfig config) {
        super(config);
    }
    
    public T_mainDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"T_MAIN\" (" + //
                "\"FINDEX\" TEXT PRIMARY KEY NOT NULL ," + // 0: FIndex
                "\"FORDER_ID\" INTEGER NOT NULL ," + // 1: FOrderId
                "\"FBARCODE\" TEXT," + // 2: FBarcode
                "\"IMIE\" TEXT," + // 3: IMIE
                "\"FBILL_NO\" TEXT," + // 4: FBillNo
                "\"FBILLER_ID\" TEXT," + // 5: FBillerID
                "\"ACTIVITY\" INTEGER NOT NULL ," + // 6: activity
                "\"FSOOR_DERNO\" TEXT," + // 7: FSoorDerno
                "\"FPRICE_TIME_POINT\" TEXT," + // 8: FPriceTimePoint
                "\"FSTOCK_ORG_ID\" TEXT," + // 9: FStockOrgId
                "\"FPURCHASE_ORG_ID\" TEXT," + // 10: FPurchaseOrgId
                "\"FBILL_TYPE_ID\" TEXT," + // 11: FBillTypeID
                "\"FOWNER_TYPE_ID_HEAD\" TEXT," + // 12: FOwnerTypeIdHead
                "\"FOWNER_ID_HEAD\" TEXT," + // 13: FOwnerIdHead
                "\"FOWNER_TYPE_ID_HEAD_IN\" TEXT," + // 14: FOwnerTypeIdHeadIn
                "\"FOWNER_ID_HEAD_IN\" TEXT," + // 15: FOwnerIdHeadIn
                "\"FDBTYPE\" TEXT," + // 16: FDBType
                "\"FDBDIRECTION\" TEXT," + // 17: FDBDirection
                "\"FID\" TEXT," + // 18: FID
                "\"FENTRY_ID\" TEXT," + // 19: FEntryID
                "\"FSETTLE_ORG_ID\" TEXT," + // 20: FSettleOrgId
                "\"FSETTLE_CURR_ID\" TEXT," + // 21: FSettleCurrId
                "\"FDATE\" TEXT," + // 22: FDate
                "\"FSUPPLIER_ID\" TEXT," + // 23: FSupplierId
                "\"FDEPARTMENT_NUMBER\" TEXT," + // 24: FDepartmentNumber
                "\"FDEPARTMENT\" TEXT," + // 25: FDepartment
                "\"FPURCHASE_DEPT_ID\" TEXT," + // 26: FPurchaseDeptId
                "\"FPURCHASE_DEPT\" TEXT," + // 27: FPurchaseDept
                "\"FPURCHASER_ID\" TEXT," + // 28: FPurchaserId
                "\"FPURCHASER\" TEXT," + // 29: FPurchaser
                "\"FSTOCKER_NUMBER\" TEXT," + // 30: FStockerNumber
                "\"FSTOCKER\" TEXT," + // 31: FStocker
                "\"FCUSTOMER_ID\" TEXT," + // 32: FCustomerID
                "\"FCUSTOMER\" TEXT," + // 33: FCustomer
                "\"FNOT\" TEXT," + // 34: FNot
                "\"F__FFF__TEXT\" TEXT);"); // 35: F_FFF_Text
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"T_MAIN\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, T_main entity) {
        stmt.clearBindings();
 
        String FIndex = entity.getFIndex();
        if (FIndex != null) {
            stmt.bindString(1, FIndex);
        }
        stmt.bindLong(2, entity.getFOrderId());
 
        String FBarcode = entity.getFBarcode();
        if (FBarcode != null) {
            stmt.bindString(3, FBarcode);
        }
 
        String IMIE = entity.getIMIE();
        if (IMIE != null) {
            stmt.bindString(4, IMIE);
        }
 
        String FBillNo = entity.getFBillNo();
        if (FBillNo != null) {
            stmt.bindString(5, FBillNo);
        }
 
        String FBillerID = entity.getFBillerID();
        if (FBillerID != null) {
            stmt.bindString(6, FBillerID);
        }
        stmt.bindLong(7, entity.getActivity());
 
        String FSoorDerno = entity.getFSoorDerno();
        if (FSoorDerno != null) {
            stmt.bindString(8, FSoorDerno);
        }
 
        String FPriceTimePoint = entity.getFPriceTimePoint();
        if (FPriceTimePoint != null) {
            stmt.bindString(9, FPriceTimePoint);
        }
 
        String FStockOrgId = entity.getFStockOrgId();
        if (FStockOrgId != null) {
            stmt.bindString(10, FStockOrgId);
        }
 
        String FPurchaseOrgId = entity.getFPurchaseOrgId();
        if (FPurchaseOrgId != null) {
            stmt.bindString(11, FPurchaseOrgId);
        }
 
        String FBillTypeID = entity.getFBillTypeID();
        if (FBillTypeID != null) {
            stmt.bindString(12, FBillTypeID);
        }
 
        String FOwnerTypeIdHead = entity.getFOwnerTypeIdHead();
        if (FOwnerTypeIdHead != null) {
            stmt.bindString(13, FOwnerTypeIdHead);
        }
 
        String FOwnerIdHead = entity.getFOwnerIdHead();
        if (FOwnerIdHead != null) {
            stmt.bindString(14, FOwnerIdHead);
        }
 
        String FOwnerTypeIdHeadIn = entity.getFOwnerTypeIdHeadIn();
        if (FOwnerTypeIdHeadIn != null) {
            stmt.bindString(15, FOwnerTypeIdHeadIn);
        }
 
        String FOwnerIdHeadIn = entity.getFOwnerIdHeadIn();
        if (FOwnerIdHeadIn != null) {
            stmt.bindString(16, FOwnerIdHeadIn);
        }
 
        String FDBType = entity.getFDBType();
        if (FDBType != null) {
            stmt.bindString(17, FDBType);
        }
 
        String FDBDirection = entity.getFDBDirection();
        if (FDBDirection != null) {
            stmt.bindString(18, FDBDirection);
        }
 
        String FID = entity.getFID();
        if (FID != null) {
            stmt.bindString(19, FID);
        }
 
        String FEntryID = entity.getFEntryID();
        if (FEntryID != null) {
            stmt.bindString(20, FEntryID);
        }
 
        String FSettleOrgId = entity.getFSettleOrgId();
        if (FSettleOrgId != null) {
            stmt.bindString(21, FSettleOrgId);
        }
 
        String FSettleCurrId = entity.getFSettleCurrId();
        if (FSettleCurrId != null) {
            stmt.bindString(22, FSettleCurrId);
        }
 
        String FDate = entity.getFDate();
        if (FDate != null) {
            stmt.bindString(23, FDate);
        }
 
        String FSupplierId = entity.getFSupplierId();
        if (FSupplierId != null) {
            stmt.bindString(24, FSupplierId);
        }
 
        String FDepartmentNumber = entity.getFDepartmentNumber();
        if (FDepartmentNumber != null) {
            stmt.bindString(25, FDepartmentNumber);
        }
 
        String FDepartment = entity.getFDepartment();
        if (FDepartment != null) {
            stmt.bindString(26, FDepartment);
        }
 
        String FPurchaseDeptId = entity.getFPurchaseDeptId();
        if (FPurchaseDeptId != null) {
            stmt.bindString(27, FPurchaseDeptId);
        }
 
        String FPurchaseDept = entity.getFPurchaseDept();
        if (FPurchaseDept != null) {
            stmt.bindString(28, FPurchaseDept);
        }
 
        String FPurchaserId = entity.getFPurchaserId();
        if (FPurchaserId != null) {
            stmt.bindString(29, FPurchaserId);
        }
 
        String FPurchaser = entity.getFPurchaser();
        if (FPurchaser != null) {
            stmt.bindString(30, FPurchaser);
        }
 
        String FStockerNumber = entity.getFStockerNumber();
        if (FStockerNumber != null) {
            stmt.bindString(31, FStockerNumber);
        }
 
        String FStocker = entity.getFStocker();
        if (FStocker != null) {
            stmt.bindString(32, FStocker);
        }
 
        String FCustomerID = entity.getFCustomerID();
        if (FCustomerID != null) {
            stmt.bindString(33, FCustomerID);
        }
 
        String FCustomer = entity.getFCustomer();
        if (FCustomer != null) {
            stmt.bindString(34, FCustomer);
        }
 
        String FNot = entity.getFNot();
        if (FNot != null) {
            stmt.bindString(35, FNot);
        }
 
        String F_FFF_Text = entity.getF_FFF_Text();
        if (F_FFF_Text != null) {
            stmt.bindString(36, F_FFF_Text);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, T_main entity) {
        stmt.clearBindings();
 
        String FIndex = entity.getFIndex();
        if (FIndex != null) {
            stmt.bindString(1, FIndex);
        }
        stmt.bindLong(2, entity.getFOrderId());
 
        String FBarcode = entity.getFBarcode();
        if (FBarcode != null) {
            stmt.bindString(3, FBarcode);
        }
 
        String IMIE = entity.getIMIE();
        if (IMIE != null) {
            stmt.bindString(4, IMIE);
        }
 
        String FBillNo = entity.getFBillNo();
        if (FBillNo != null) {
            stmt.bindString(5, FBillNo);
        }
 
        String FBillerID = entity.getFBillerID();
        if (FBillerID != null) {
            stmt.bindString(6, FBillerID);
        }
        stmt.bindLong(7, entity.getActivity());
 
        String FSoorDerno = entity.getFSoorDerno();
        if (FSoorDerno != null) {
            stmt.bindString(8, FSoorDerno);
        }
 
        String FPriceTimePoint = entity.getFPriceTimePoint();
        if (FPriceTimePoint != null) {
            stmt.bindString(9, FPriceTimePoint);
        }
 
        String FStockOrgId = entity.getFStockOrgId();
        if (FStockOrgId != null) {
            stmt.bindString(10, FStockOrgId);
        }
 
        String FPurchaseOrgId = entity.getFPurchaseOrgId();
        if (FPurchaseOrgId != null) {
            stmt.bindString(11, FPurchaseOrgId);
        }
 
        String FBillTypeID = entity.getFBillTypeID();
        if (FBillTypeID != null) {
            stmt.bindString(12, FBillTypeID);
        }
 
        String FOwnerTypeIdHead = entity.getFOwnerTypeIdHead();
        if (FOwnerTypeIdHead != null) {
            stmt.bindString(13, FOwnerTypeIdHead);
        }
 
        String FOwnerIdHead = entity.getFOwnerIdHead();
        if (FOwnerIdHead != null) {
            stmt.bindString(14, FOwnerIdHead);
        }
 
        String FOwnerTypeIdHeadIn = entity.getFOwnerTypeIdHeadIn();
        if (FOwnerTypeIdHeadIn != null) {
            stmt.bindString(15, FOwnerTypeIdHeadIn);
        }
 
        String FOwnerIdHeadIn = entity.getFOwnerIdHeadIn();
        if (FOwnerIdHeadIn != null) {
            stmt.bindString(16, FOwnerIdHeadIn);
        }
 
        String FDBType = entity.getFDBType();
        if (FDBType != null) {
            stmt.bindString(17, FDBType);
        }
 
        String FDBDirection = entity.getFDBDirection();
        if (FDBDirection != null) {
            stmt.bindString(18, FDBDirection);
        }
 
        String FID = entity.getFID();
        if (FID != null) {
            stmt.bindString(19, FID);
        }
 
        String FEntryID = entity.getFEntryID();
        if (FEntryID != null) {
            stmt.bindString(20, FEntryID);
        }
 
        String FSettleOrgId = entity.getFSettleOrgId();
        if (FSettleOrgId != null) {
            stmt.bindString(21, FSettleOrgId);
        }
 
        String FSettleCurrId = entity.getFSettleCurrId();
        if (FSettleCurrId != null) {
            stmt.bindString(22, FSettleCurrId);
        }
 
        String FDate = entity.getFDate();
        if (FDate != null) {
            stmt.bindString(23, FDate);
        }
 
        String FSupplierId = entity.getFSupplierId();
        if (FSupplierId != null) {
            stmt.bindString(24, FSupplierId);
        }
 
        String FDepartmentNumber = entity.getFDepartmentNumber();
        if (FDepartmentNumber != null) {
            stmt.bindString(25, FDepartmentNumber);
        }
 
        String FDepartment = entity.getFDepartment();
        if (FDepartment != null) {
            stmt.bindString(26, FDepartment);
        }
 
        String FPurchaseDeptId = entity.getFPurchaseDeptId();
        if (FPurchaseDeptId != null) {
            stmt.bindString(27, FPurchaseDeptId);
        }
 
        String FPurchaseDept = entity.getFPurchaseDept();
        if (FPurchaseDept != null) {
            stmt.bindString(28, FPurchaseDept);
        }
 
        String FPurchaserId = entity.getFPurchaserId();
        if (FPurchaserId != null) {
            stmt.bindString(29, FPurchaserId);
        }
 
        String FPurchaser = entity.getFPurchaser();
        if (FPurchaser != null) {
            stmt.bindString(30, FPurchaser);
        }
 
        String FStockerNumber = entity.getFStockerNumber();
        if (FStockerNumber != null) {
            stmt.bindString(31, FStockerNumber);
        }
 
        String FStocker = entity.getFStocker();
        if (FStocker != null) {
            stmt.bindString(32, FStocker);
        }
 
        String FCustomerID = entity.getFCustomerID();
        if (FCustomerID != null) {
            stmt.bindString(33, FCustomerID);
        }
 
        String FCustomer = entity.getFCustomer();
        if (FCustomer != null) {
            stmt.bindString(34, FCustomer);
        }
 
        String FNot = entity.getFNot();
        if (FNot != null) {
            stmt.bindString(35, FNot);
        }
 
        String F_FFF_Text = entity.getF_FFF_Text();
        if (F_FFF_Text != null) {
            stmt.bindString(36, F_FFF_Text);
        }
    }

    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
    }    

    @Override
    public T_main readEntity(Cursor cursor, int offset) {
        T_main entity = new T_main( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // FIndex
            cursor.getLong(offset + 1), // FOrderId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // FBarcode
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // IMIE
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // FBillNo
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // FBillerID
            cursor.getInt(offset + 6), // activity
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // FSoorDerno
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // FPriceTimePoint
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // FStockOrgId
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // FPurchaseOrgId
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // FBillTypeID
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // FOwnerTypeIdHead
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // FOwnerIdHead
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // FOwnerTypeIdHeadIn
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // FOwnerIdHeadIn
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // FDBType
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // FDBDirection
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // FID
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // FEntryID
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // FSettleOrgId
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // FSettleCurrId
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // FDate
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // FSupplierId
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // FDepartmentNumber
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // FDepartment
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // FPurchaseDeptId
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // FPurchaseDept
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // FPurchaserId
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // FPurchaser
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // FStockerNumber
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // FStocker
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // FCustomerID
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // FCustomer
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // FNot
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35) // F_FFF_Text
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, T_main entity, int offset) {
        entity.setFIndex(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setFOrderId(cursor.getLong(offset + 1));
        entity.setFBarcode(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setIMIE(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setFBillNo(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setFBillerID(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setActivity(cursor.getInt(offset + 6));
        entity.setFSoorDerno(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setFPriceTimePoint(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setFStockOrgId(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setFPurchaseOrgId(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setFBillTypeID(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setFOwnerTypeIdHead(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setFOwnerIdHead(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setFOwnerTypeIdHeadIn(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setFOwnerIdHeadIn(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setFDBType(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setFDBDirection(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setFID(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setFEntryID(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setFSettleOrgId(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setFSettleCurrId(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setFDate(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setFSupplierId(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setFDepartmentNumber(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setFDepartment(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setFPurchaseDeptId(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setFPurchaseDept(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setFPurchaserId(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setFPurchaser(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setFStockerNumber(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setFStocker(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setFCustomerID(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setFCustomer(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setFNot(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setF_FFF_Text(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
     }
    
    @Override
    protected final String updateKeyAfterInsert(T_main entity, long rowId) {
        return entity.getFIndex();
    }
    
    @Override
    public String getKey(T_main entity) {
        if(entity != null) {
            return entity.getFIndex();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(T_main entity) {
        return entity.getFIndex() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
